name: build-docker-images

on:
  push:
    branches: [ main ]
    paths-ignore:
      - "*.md"

  pull_request:
    branches: [ main ]
    paths-ignore:
      - "*.md"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  REGISTRY_URL: "docker.io"   # docker.io or other registry URL, DOCKER_REGISTRY_USERNAME/DOCKER_REGISTRY_PASSWORD to be set in CI env.
  BUILDKIT_PROGRESS: "plain"  # Full logs for CI build.

  # DOCKER_REGISTRY_USERNAME and DOCKER_REGISTRY_PASSWORD is required for docker image push, they should be set in CI secrets.
  DOCKER_REGISTRY_USERNAME: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
  DOCKER_REGISTRY_PASSWORD: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}
  
  # used to sync image to mirror registry
  DOCKER_MIRROR_REGISTRY_USERNAME: ${{ secrets.DOCKER_MIRROR_REGISTRY_USERNAME }}
  DOCKER_MIRROR_REGISTRY_PASSWORD: ${{ secrets.DOCKER_MIRROR_REGISTRY_PASSWORD }}

jobs:
  ## Clash
  docker_clash:
    name: 'app-clash'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: |
          source ./tool.sh && build_image app-clash latest docker_app_clash/Dockerfile && push_image

  ## Keycloak
  docker_keycloak:
    name: 'keycloak'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: |
          source ./tool.sh && build_image keycloak latest docker_keycloak/Dockerfile && push_image

  ## DevHub
  qpod_dev-hub:
    name: 'dev-hub'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: |
          source ./tool.sh
          build_image dev-hub latest docker_dev_box/hub.Dockerfile \
            --build-arg "BASE_IMG=node" \
            --build-arg "ARG_PROFILE_JUPYTER=hub"
          push_image

  ## DevBox - base
  qpod_base-dev:
    name: 'developer,base-dev'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: |
          source ./tool.sh && free_diskspace
          build_image base-dev latest docker_dev_box/Dockerfile \
            --build-arg "BASE_IMG=node" \
            --build-arg "ARG_PROFILE_JUPYTER=base,kernels,extensions" \
            --build-arg "ARG_PROFILE_VSCODE=base"
            alias_image base-dev latest developer latest && push_image dev
  ## DevBox - full stack
  qpod_full-stack-dev:
    name: 'full-stack-dev'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: |
          source ./tool.sh && free_diskspace
          build_image full-stack-dev latest docker_dev_box/Dockerfile \
            --build-arg "BASE_IMG=full-stack" \
            --build-arg "ARG_PROFILE_JUPYTER=base,kernels,extensions" \
            --build-arg "ARG_PROFILE_VSCODE=base"
          push_image
  ## DevBox - cuda
  qpod_cuda-dev:
    name: 'full-cuda,cuda-dev'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: |
          source ./tool.sh && free_diskspace
          build_image cuda-dev latest docker_dev_box/Dockerfile \
            --build-arg "BASE_IMG=core-cuda" \
            --build-arg "ARG_PROFILE_JUPYTER=base,kernels,extensions" \
            --build-arg "ARG_PROFILE_VSCODE=base"
          alias_image cuda-dev latest full-cuda latest && push_image

  ## Sync all images in this build (listed by "names") to mirror registry.
  sync_images:
    needs: ["qpod_cuda-dev"]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: |
          source ./tool.sh
          printenv > /tmp/docker.env
          docker run --rm \
            --env-file /tmp/docker.env \
            -v $(pwd):/tmp \
            -w /tmp \
            ${DOCKER_IMG_PREFIX:-qpod}/docker-kit python /opt/utils/image-syncer/run_jobs.py
