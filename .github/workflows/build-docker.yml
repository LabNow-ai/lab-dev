name: build-docker-images

on:
  push:
    branches: [ main ]
    paths-ignore:
      - "*.md"

  pull_request:
    branches: [ main ]
    paths-ignore:
      - "*.md"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  REGISTRY_URL: "docker.io"   # docker.io or other registry URL, DOCKER_REGISTRY_USER/DOCKER_REGISTRY_PASSWORD to be set in CI env.
  BUILDKIT_PROGRESS: "plain"  # Full logs for CI build.

  # DOCKER_REGISTRY_USER and DOCKER_REGISTRY_PASSWORD is required for docker image push, they should be set in CI secrets.
  DOCKER_REGISTRY_USER: ${{ secrets.DOCKER_REGISTRY_USER }}
  DOCKER_REGISTRY_PASSWORD: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}
  
  # used to sync image to mirror registry
  DOCKER_MIRROR_REGISTRY_USERNAME: ${{ secrets.DOCKER_MIRROR_REGISTRY_USERNAME }}
  DOCKER_MIRROR_REGISTRY_PASSWORD: ${{ secrets.DOCKER_MIRROR_REGISTRY_PASSWORD }}

jobs:
  ## DockerKit
  docker_kit:
    name: 'docker-kit'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: |
          source ./tool.sh && build_image docker-kit latest docker_docker_kit/Dockerfile && push_image

  ## Clash
  docker_clash:
    name: 'app-clash'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: |
          source ./tool.sh && build_image app-clash latest docker_app_clash/Dockerfile && push_image

  ## DevBox - base
  qpod_base-dev:
    name: 'developer,base-dev'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: |
          source ./tool.sh && free_diskspace
          build_image base-dev latest docker_devbox/Dockerfile \
            --build-arg "BASE_IMG=node" \
            --build-arg "ARG_PROFILE_JUPYTER=base,kernels,extensions" \
            --build-arg "ARG_PROFILE_VSCODE=base"
            alias_image base-dev latest developer latest && push_image dev
  ## DevBox - core
  qpod_core-dev:
    name: 'full,core-dev'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: |
          source ./tool.sh && free_diskspace
          build_image core-dev latest docker_devbox/Dockerfile \
            --build-arg "BASE_IMG=core" \
            --build-arg "ARG_PROFILE_JUPYTER=base,kernels,extensions" \
            --build-arg "ARG_PROFILE_VSCODE=base"
          alias_image core-dev latest full latest && push_image
  ## DevBox - cuda
  qpod_cuda-dev:
    name: 'full-cuda,cuda-dev'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: |
          source ./tool.sh && free_diskspace
          build_image cuda-dev latest docker_devbox/Dockerfile \
            --build-arg "BASE_IMG=core-cuda" \
            --build-arg "ARG_PROFILE_JUPYTER=base,kernels,extensions" \
            --build-arg "ARG_PROFILE_VSCODE=base"
          alias_image cuda-dev latest full-cuda latest && push_image


  sync_images:
    needs: ['docker_kit', "qpod_cuda-dev"]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: |
          source ./tool.sh
          printenv > /tmp/docker.env
          docker run --rm \
            --env-file /tmp/docker.env \
            -v $(pwd):/tmp \
            -w /tmp \
            qpod/docker-kit python docker_docker_kit/work/image-syncer/run_jobs.py
